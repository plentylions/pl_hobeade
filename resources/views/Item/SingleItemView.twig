{{ component( "HobeaDe::Basket.Components.AddToBasket" ) }}
{{ component( "Legend::Item.Components.AddToWishList" ) }}
{{ component( "Ceres::Item.Components.GraduatedPrices" ) }}
{{ component( "Ceres::Item.Components.ItemBundle" ) }}
{{ component( "Ceres::Item.Components.ItemImageCarousel" ) }}
{{ component( "Ceres::Item.Components.OrderProperties" ) }}
{{ component( "Ceres::Item.Components.OrderPropertyList" ) }}
{{ component( "HobeaDe::Item.Components.SingleItem" ) }}
{{ component( "Legend::Item.Components.VariationSelect" ) }}
{{ component( "Ceres::Item.Components.TagList" ) }}

<single-item v-cloak item-data="{{ item | json_data }}"
            attributes-data="{{ attributes | json_data }}"
            variations="{{ variations | json_data }}"
            :please-select-option-variation-id="{{ dynamicVariationId }}"
            :init-please-select-option="{{ initPleaseSelectOption | json_encode }}">
    <template #before-price>{{ LayoutContainer.show("Ceres::SingleItem.BeforePrice", item.documents[0].data) }}</template>
    <template #after-price>{{ LayoutContainer.show("Ceres::SingleItem.AfterPrice", item.documents[0].data) }}</template>
    <template #before-add-to-basket>{{ LayoutContainer.show("Ceres::SingleItem.BeforeAddToBasket", item.documents[0].data) }}</template>
    <template #after-add-to-basket>{{ LayoutContainer.show("Ceres::SingleItem.AfterAddToBasket", item.documents[0].data) }}</template>
    <template #additional-content-after-add-to-basket>{{ LayoutContainer.show("Ceres::SingleItem.AdditionalContentAfterAddToBasket", item.documents[0].data) }}</template>
    <template #additional-content-after-vat>{{ LayoutContainer.show("Ceres::SingleItem.AdditionalContentAfterVAT", item.documents[0].data) }}</template>
    <template #add-detail-tabs>{{ LayoutContainer.show("Ceres::SingleItem.AddDetailTabs", item.documents[0].data) }}</template>
    <template #add-detail-tabs-content>{{ LayoutContainer.show("Ceres::SingleItem.AddDetailTabsContent", item.documents[0].data) }}</template>
    <template #cross-selling-accessory>
        {% for accessory in accessories %}
            {% if accessory['items']|length > 0 %}
                <div class="row legend-accessories" data-relation="{{ accessory['relation'] }}">
                    <div class="col-12">
                        <hr>
                        <p class="h3"> {{ trans("Legend::Template.singleItemListTitle" ~ accessory['relation']) }}</p>
                    </div>
                    {{ component( "Ceres::PageDesign.Components.Carousel" ) }}

                    <div class="col-12">
                        <carousel>
                            {% for listItem in accessory['items'] %}
                                <template slot="items">
                                    <category-item
                                        :item-data="{{ listItem.data | json_encode }}"
                                        :decimal-count="{{ ceresConfig.item.storeSpecial }}"
                                        :disable-carousel-on-mobile="true">
                                        <template #before-prices>{{ LayoutContainer.show("Ceres::CategoryItem.BeforePrices", listItem.data) }}</template>
                                        <template #after-prices>{{ LayoutContainer.show("Ceres::CategoryItem.AfterPrices", listItem.data) }}</template>
                                    </category-item>
                                </template>
                            {% endfor %}
                        </carousel>
                    </div>
                </div>
            {% endif %}
        {% endfor %}
    </template>
    <template #item-list-container>{{ LayoutContainer.show("Ceres::SingleItem.ItemListContainer", item) }}</template>
    <template #legend-feedback-container>{{ LayoutContainer.show("Legend::SingleItem.FeedbackContainerTab", item) }}</template>
    <template #feedback-container>{{ LayoutContainer.show("Ceres::SingleItem.FeedbackContainer", item) }}</template>
    <template #image-carousel>
        {% set ImageCarouselOverride = LayoutContainer.show("Ceres::SingleItem.ImageCarousel") %}
        {% if ImageCarouselOverride|trim is empty %}
            <item-image-carousel plugin-path="{{ plugin_path('Ceres') }}" image-url-accessor="url" template="#vue-item-image-carousel"></item-image-carousel>
        {% else %}
            {{ ImageCarouselOverride }}
        {% endif %}
    </template>
</single-item>